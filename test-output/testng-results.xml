<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="712" started-at="2016-04-22T09:53:28Z" finished-at="2016-04-22T09:53:28Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="712" started-at="2016-04-22T09:53:28Z" finished-at="2016-04-22T09:53:28Z">
      <class name="testcases.HeadersAndContentTypeTests">
        <test-method status="PASS" signature="beginTestSuite()[pri:0, instance:testcases.HeadersAndContentTypeTests@14bf9759]" name="beginTestSuite" is-config="true" duration-ms="9" started-at="2016-04-22T02:53:28Z" finished-at="2016-04-22T02:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beginTestSuite -->
        <test-method status="PASS" signature="setupURL()[pri:0, instance:testcases.HeadersAndContentTypeTests@14bf9759]" name="setupURL" is-config="true" duration-ms="338" started-at="2016-04-22T02:53:28Z" finished-at="2016-04-22T02:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupURL -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HeadersAndContentTypeTests@14bf9759]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-04-22T02:53:28Z" finished-at="2016-04-22T02:53:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HeadersAndContentTypeTests.sendPostRequestWithInvalidContentType() throws java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="sendPostRequestWithInvalidContentType()[pri:0, instance:testcases.HeadersAndContentTypeTests@14bf9759]" name="sendPostRequestWithInvalidContentType" duration-ms="360" started-at="2016-04-22T02:53:28Z" finished-at="2016-04-22T02:53:28Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[path cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: path cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at com.jayway.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
	at com.jayway.restassured.internal.assertion.AssertParameter$notNull.callStatic(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at com.jayway.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1547)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at com.jayway.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:164)
	at com.jayway.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
	at testcases.HeadersAndContentTypeTests.sendPostRequestWithInvalidContentType(HeadersAndContentTypeTests.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendPostRequestWithInvalidContentType -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HeadersAndContentTypeTests@14bf9759]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-04-22T02:53:28Z" finished-at="2016-04-22T02:53:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HeadersAndContentTypeTests.sendPostRequestWithInvalidContentType() throws java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endTestSuite()[pri:0, instance:testcases.HeadersAndContentTypeTests@14bf9759]" name="endTestSuite" is-config="true" duration-ms="1" started-at="2016-04-22T02:53:28Z" finished-at="2016-04-22T02:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestSuite -->
      </class> <!-- testcases.HeadersAndContentTypeTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
